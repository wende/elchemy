dist: trusty
sudo: required
language: elixir
elixir:
    - 1.4.2
os:
  - linux

cache:
  directories:
    - test/elm-stuff/build-artifacts
    - sysconfcpus

before_install:
  - sudo apt-get -qq update
  - sudo apt-get install moreutils -y
  - if [ ${TRAVIS_OS_NAME} == "osx" ];
    then brew update; brew install nvm; mkdir ~/.nvm; export NVM_DIR=~/.nvm; source $(brew --prefix nvm)/nvm.sh;
    fi
  - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - | # epic build time improvement - see https://github.com/elm-lang/elm-compiler/issues/1473#issuecomment-245704142
    if [ ! -d sysconfcpus/bin ];
    then
      git clone https://github.com/obmarg/libsysconfcpus.git;
      cd libsysconfcpus;
      ./configure --prefix=$TRAVIS_BUILD_DIR/sysconfcpus;
      make && make install;
      cd ..;
    fi

install:
  - nvm install 6.11.2
  - nvm use 6.11.2
  - node --version
  - npm --version
  - npm install -g elm
  - mv $(npm config get prefix)/bin/elm-make $(npm config get prefix)/bin/elm-make-old
  - printf '%s\n\n' '#!/bin/bash' 'echo "Running elm-make with sysconfcpus -n 2"' '$TRAVIS_BUILD_DIR/sysconfcpus/bin/sysconfcpus -n 2 elm-make-old "$@"' > $(npm config get prefix)/bin/elm-make
  - chmod +x $(npm config get prefix)/bin/elm-make
  - npm install
  - elm package install --yes
  - cd elchemy-core/
  - mix local.rebar --force # for Elixir 1.3.0 and up
  - mix local.hex --force
  - mix deps.get
  - cd ../
  - make compile
  - make compile-std

script:
  - make test
  - make test-std
  - make compile-elixir
  - mix new test_project && cd test_project && (yes | ../elchemy init) && ../elchemy compile elm lib && cp -r ../elchemy-core/lib lib/elm-deps && mix test

notifications:
  email: false
